#!/usr/bin/env Rscript
args = commandArgs(trailingOnly=TRUE)
epidemic_data=../data/ecdc_20200603.csv#args[1]
country=../model_output/R0_2_79/3_week_forecast/19_April/EpiEstim/#args[2]
outdir='France' #args[3]
library(EpiEstim)
#Read data
epidemic_df <- read.csv(epidemic_data)
#Get data per country
country_df <-epidemic_df[epidemic_df$countriesAndTerritories==country,]
epidemic_data='../data/ecdc_20200603.csv'#args[1]
country='../model_output/R0_2_79/3_week_forecast/19_April/EpiEstim/'#args[2]
outdir='France' #args[3]
library(EpiEstim)
#Read data
epidemic_df <- read.csv(epidemic_data)
#Get data per country
country_df <-epidemic_df[epidemic_df$countriesAndTerritories==country,]
View(country_df)
View(epidemic_df)
#Sort on date
country_df <-country_df[order(as.Date(country_df$date, format="%d/%m/%Y")),]
#Get data per country
country_df <-epidemic_df[epidemic_df$countriesAndTerritories==country,]
View(country_df)
View(epidemic_df)
epidemic_df$countriesAndTerritories==country
country
epidemic_data='../data/ecdc_20200603.csv'#args[1]
country='France'#args[2]
outdir='../model_output/R0_2_79/3_week_forecast/19_April/EpiEstim/' #args[3]
library(EpiEstim)
#Read data
epidemic_df <- read.csv(epidemic_data)
#Get data per country
country_df <-epidemic_df[epidemic_df$countriesAndTerritories==country,]
#Sort on date
country_df <-country_df[order(as.Date(country_df$dateRep, format="%d/%m/%Y")),]
#Cumulative deaths
cum_deaths <-cumsum(country_df[,c("deaths") ])
cum_deaths
#Select data 30 days before 10 cumulative deaths were observed
indices<-which(cum_deaths>=10)
start_i<-indices[1]-30
if (start_i<0){
start_i<-0
}
end_i <-tail(indices, n=1)
country_df <- country_df[(start_i:end_i),]
#Get cases for modeling
country_cases <-country_df[,c("cases")]
country_cases
#Fix case corrections by averaging the previous and subsequent days
adj_indices<-which(country_cases<0)
for(i in adj_indices){
country_cases[i] = (country_cases[i-1]+country_cases[i+1])/2
}
country_cases
country_df$dateRep
country_df$dateRep<19/04/2020
country_df$dateRep<'19/04/2020''
country_df$dateRep<'19/04/2020'
country_df[country_df$dateRep<'19/04/2020']
country_df[country_df$dateRep='19/04/2020']
country_df[(date <= "2020-04-19")
]
country_df[(date <= "2020-04-19")]
country_df[(date <= "2020-04-19"),]
country_df[($date <= "2020-04-19"),]
with(country_df,country_df[($date <= "2020-04-19"),]
with(country_df,country_df[(date <= "2020-04-19"),]
c
with(country_df,country_df[(date <= "2020-04-19")]
)
country_df$dateRep
with(country_df,country_df[(dateRep <= "2020-04-19")])
country_df$dateRep
country_df$dateRep<'2020-04-19'
country_df$dateRep<'19/04/2020'
country_df$dateRep=='19/04/2020'
country_df[:country_df$dateRep=='19/04/2020']
country_df[1,country_df$dateRep=='19/04/2020']
which(country_df$dateRep=='19/04/2020')
last_date = which(country_df$dateRep=='19/04/2020')
last_date
country_df[1,last_date]
country_df[last_date]
country_df[last_date,]
country_df[1,last_date,]
country_df[(1:last_date),]
#Read data
epidemic_df <- read.csv(epidemic_data)
#Get data per country
country_df <-epidemic_df[epidemic_df$countriesAndTerritories==country,]
#Sort on date
country_df <-country_df[order(as.Date(country_df$dateRep, format="%d/%m/%Y")),]
#Get dates up to 19th April
last_date = which(country_df$dateRep=='19/04/2020')
country_df = country_df[(1:last_date),]
#Cumulative deaths
cum_deaths <-cumsum(country_df[,c("deaths") ])
#Select data 30 days before 10 cumulative deaths were observed
indices<-which(cum_deaths>=10)
start_i<-indices[1]-30
if (start_i<0){
start_i<-0
}
end_i <-tail(indices, n=1)
country_df <- country_df[(start_i:end_i),]
#Get cases for modeling
country_cases <-country_df[,c("cases")]
country_cases
#Fix case corrections by averaging the previous and subsequent days
adj_indices<-which(country_cases<0)
for(i in adj_indices){
country_cases[i] = (country_cases[i-1]+country_cases[i+1])/2
}
country_cases
#Variabel Serial Interval
R_estimate <-estimate_R(country_cases,  method="uncertain_si", config = make_config(list(mean_si = 7.5, std_mean_si = 2,min_mean_si = 1, max_mean_si = 8.4, std_si = 3.4, std_std_si = 1, min_std_si = 0.5, max_std_si = 4, n1 = 1000, n2 = 1000)))
#Add the dates to the R estimates. The R estimate will start at index 7 due to the
#7-day sliding window
end_i<-length(country_df[,1])
dates<-country_df[(8:end_i),c("dateRep")]
#Out df
out_df<-R_estimate$R
#Out df
out_df<-R_estimate$R
out_df$date<-dates
#Define output name
outname<-paste(outdir,country,'_R_estimate.csv',sep="")
#Save results
write.csv(out_df,outname)
